name: Deploy to cPanel

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    paths-ignore:
      - .github/**
      - .env_example

jobs: 
  Archive-Build:
    name: Archive Project
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy Started Notification
        uses: mikesprague/teams-incoming-webhook-action@v1
        continue-on-error: true
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
          deploy-card: true
          title: 'üöÄ Deployment Started to Frontend (Dev)'
          color: 'info'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install Dependencies
        run: npm ci

      - name: Zip Project
        run: |
          zip -r warebase-frontend.zip . -x "*.git*" ".github/*" ".env*"

      - name: Archive Project
        uses: actions/upload-artifact@v4
        with:
          name: warebase-frontend
          path: ./warebase-frontend.zip
          retention-days: 7

  Deploy:
    name: Deploy to Lightsail
    runs-on: ubuntu-latest
    needs: Archive-Build
    timeout-minutes: 3

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: warebase-frontend
        path: .

    - name: Copy build
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.LIGHTSAIL_IP }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        port: 22
        source: "warebase-frontend.zip"
        target: "/home/ubuntu/app/"

  Extract:
    name: Extract build
    runs-on: ubuntu-latest
    needs: Deploy
    timeout-minutes: 3

    steps:
    - name: Unzip build
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.LIGHTSAIL_IP }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/app/
          unzip -o warebase-frontend.zip -d ./warebase-frontend
          rm -rf warebase-frontend.zip
          cp .env warebase-frontend/.env

  Restart:
    name: Restart App
    runs-on: ubuntu-latest
    needs: Extract
    timeout-minutes: 3

    steps:
    - name: Restart App
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.LIGHTSAIL_IP }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/app/warebase-frontend
          pm2 restart warebase-frontend

  Notifications:
    if: always()
    needs: [Restart, Archive-Build, Deploy, Extract]
    runs-on: ubuntu-latest
    steps:
    - name: Success Notification
      if: ${{ needs.Restart.result == 'success' && needs.Archive-Build.result == 'success' && needs.Deploy.result == 'success' && needs.Extract.result == 'success' }}
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '‚úÖ Deployment to Frontend(Dev) was Successful ü•≥üéâ'
        color: 'success'

    - name: Failure Notification
      if: ${{ needs.Restart.result != 'success' || needs.Archive-Build.result != 'success' || needs.Deploy.result != 'success' || needs.Extract.result != 'success' }}
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '‚ùå Deployment to Frontend(Dev) Failed ‚òπÔ∏èüíî'
        color: 'failure'
